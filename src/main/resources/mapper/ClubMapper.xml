<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hm.com.dao.ClubMapper">
  <resultMap id="BaseResultMap" type="hm.com.bean.Club">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="director" jdbcType="VARCHAR" property="director" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="college_id" jdbcType="INTEGER" property="collegeId" />
    <result column="student_num" jdbcType="INTEGER" property="studentNum" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <!--  List<Class> selectByExampleWithMajorAndCollege(ClassExample example);-->
  <resultMap id="ResultMapWithCollege" type="hm.com.bean.Club">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="director" jdbcType="VARCHAR" property="director" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="college_id" jdbcType="INTEGER" property="collegeId" />
    <result column="student_num" jdbcType="INTEGER" property="studentNum" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="college_id" jdbcType="INTEGER" property="collegeId" />
    <association property="college" javaType="hm.com.bean.College">
      <result column="college_name" property="name"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, director, name, college_id, student_num, description, phone
  </sql>
  <sql id="College_Column_List">
    c.id, c.director, c.name, c.college_id, c.student_num, c.description, c.phone,b.name as college_name
  </sql>
  <select id="selectByExample" parameterType="hm.com.bean.ClubExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from club
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <!--  自己设置插入语句-->
  <select id="selectByExampleWithCollege" parameterType="hm.com.bean.ClubExample" resultMap="ResultMapWithCollege">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="College_Column_List" />
    FROM club c
    LEFT JOIN college b ON c.college_id=b.id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from club
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from club
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="hm.com.bean.ClubExample">
    delete from club
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="hm.com.bean.Club">
    insert into club (id, director, name, 
      college_id, student_num, description, 
      phone)
    values (#{id,jdbcType=INTEGER}, #{director,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{collegeId,jdbcType=INTEGER}, #{studentNum,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="hm.com.bean.Club">
    insert into club
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="director != null">
        director,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="studentNum != null">
        student_num,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="director != null">
        #{director,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="studentNum != null">
        #{studentNum,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="hm.com.bean.ClubExample" resultType="java.lang.Long">
    select count(*) from club
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update club
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.director != null">
        director = #{record.director,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.collegeId != null">
        college_id = #{record.collegeId,jdbcType=INTEGER},
      </if>
      <if test="record.studentNum != null">
        student_num = #{record.studentNum,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update club
    set id = #{record.id,jdbcType=INTEGER},
      director = #{record.director,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      college_id = #{record.collegeId,jdbcType=INTEGER},
      student_num = #{record.studentNum,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="hm.com.bean.Club">
    update club
    <set>
      <if test="director != null">
        director = #{director,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="studentNum != null">
        student_num = #{studentNum,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="hm.com.bean.Club">
    update club
    set director = #{director,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      college_id = #{collegeId,jdbcType=INTEGER},
      student_num = #{studentNum,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>