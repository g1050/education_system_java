<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hm.com.dao.DomnitoryMapper">
  <resultMap id="BaseResultMap" type="hm.com.bean.Domnitory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="building" jdbcType="VARCHAR" property="building" />
    <result column="room" jdbcType="INTEGER" property="room" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="director" jdbcType="VARCHAR" property="director" />
    <result column="member" jdbcType="INTEGER" property="member" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, building, room, number, director, member
  </sql>
  <select id="selectByExample" parameterType="hm.com.bean.DomnitoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from domnitory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from domnitory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from domnitory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="hm.com.bean.DomnitoryExample">
    delete from domnitory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="hm.com.bean.Domnitory">
    insert into domnitory (id, name, building, 
      room, number, director, 
      member)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{building,jdbcType=VARCHAR}, 
      #{room,jdbcType=INTEGER}, #{number,jdbcType=INTEGER}, #{director,jdbcType=VARCHAR}, 
      #{member,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="hm.com.bean.Domnitory">
    insert into domnitory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="building != null">
        building,
      </if>
      <if test="room != null">
        room,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="director != null">
        director,
      </if>
      <if test="member != null">
        member,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="building != null">
        #{building,jdbcType=VARCHAR},
      </if>
      <if test="room != null">
        #{room,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="director != null">
        #{director,jdbcType=VARCHAR},
      </if>
      <if test="member != null">
        #{member,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="hm.com.bean.DomnitoryExample" resultType="java.lang.Long">
    select count(*) from domnitory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update domnitory
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.building != null">
        building = #{record.building,jdbcType=VARCHAR},
      </if>
      <if test="record.room != null">
        room = #{record.room,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.director != null">
        director = #{record.director,jdbcType=VARCHAR},
      </if>
      <if test="record.member != null">
        member = #{record.member,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update domnitory
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      building = #{record.building,jdbcType=VARCHAR},
      room = #{record.room,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      director = #{record.director,jdbcType=VARCHAR},
      member = #{record.member,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="hm.com.bean.Domnitory">
    update domnitory
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="building != null">
        building = #{building,jdbcType=VARCHAR},
      </if>
      <if test="room != null">
        room = #{room,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="director != null">
        director = #{director,jdbcType=VARCHAR},
      </if>
      <if test="member != null">
        member = #{member,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="hm.com.bean.Domnitory">
    update domnitory
    set name = #{name,jdbcType=VARCHAR},
      building = #{building,jdbcType=VARCHAR},
      room = #{room,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      director = #{director,jdbcType=VARCHAR},
      member = #{member,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="hm.com.bean.Domnitory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="building" jdbcType="VARCHAR" property="building" />
    <result column="room" jdbcType="INTEGER" property="room" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="director" jdbcType="VARCHAR" property="director" />
    <result column="member" jdbcType="INTEGER" property="member" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, building, room, number, director, member
  </sql>
  <select id="selectByExample" parameterType="hm.com.bean.DomnitoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from domnitory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from domnitory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from domnitory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="hm.com.bean.DomnitoryExample">
    delete from domnitory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="hm.com.bean.Domnitory">
    insert into domnitory (id, name, building, 
      room, number, director, 
      member)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{building,jdbcType=VARCHAR}, 
      #{room,jdbcType=INTEGER}, #{number,jdbcType=INTEGER}, #{director,jdbcType=VARCHAR}, 
      #{member,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="hm.com.bean.Domnitory">
    insert into domnitory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="building != null">
        building,
      </if>
      <if test="room != null">
        room,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="director != null">
        director,
      </if>
      <if test="member != null">
        member,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="building != null">
        #{building,jdbcType=VARCHAR},
      </if>
      <if test="room != null">
        #{room,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="director != null">
        #{director,jdbcType=VARCHAR},
      </if>
      <if test="member != null">
        #{member,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="hm.com.bean.DomnitoryExample" resultType="java.lang.Long">
    select count(*) from domnitory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update domnitory
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.building != null">
        building = #{record.building,jdbcType=VARCHAR},
      </if>
      <if test="record.room != null">
        room = #{record.room,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.director != null">
        director = #{record.director,jdbcType=VARCHAR},
      </if>
      <if test="record.member != null">
        member = #{record.member,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update domnitory
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      building = #{record.building,jdbcType=VARCHAR},
      room = #{record.room,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      director = #{record.director,jdbcType=VARCHAR},
      member = #{record.member,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="hm.com.bean.Domnitory">
    update domnitory
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="building != null">
        building = #{building,jdbcType=VARCHAR},
      </if>
      <if test="room != null">
        room = #{room,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="director != null">
        director = #{director,jdbcType=VARCHAR},
      </if>
      <if test="member != null">
        member = #{member,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="hm.com.bean.Domnitory">
    update domnitory
    set name = #{name,jdbcType=VARCHAR},
      building = #{building,jdbcType=VARCHAR},
      room = #{room,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      director = #{director,jdbcType=VARCHAR},
      member = #{member,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>